// <auto-generated />
using System;
using MainBot.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MainBot.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220405231641_mutedUserBackup")]
    partial class mutedUserBackup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.2.22153.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MainBot.Database.Models.DiscordChannel", b =>
                {
                    b.Property<int>("key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ulong>("guildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("id")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("key");

                    b.ToTable("NukeChannels");
                });

            modelBuilder.Entity("MainBot.Database.Models.Guild", b =>
                {
                    b.Property<int>("key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("guildSettingskey")
                        .HasColumnType("int");

                    b.Property<ulong>("id")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("key");

                    b.HasIndex("guildSettingskey");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("MainBot.Database.Models.GuildSettings", b =>
                {
                    b.Property<int>("key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ulong?>("administratorRoleId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("hiddenRoleId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("messageLogChannelId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("moderatorRoleId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("muteRoleId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("rainbowRoleId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("userLogChannelId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("verifyRoleId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("key");

                    b.ToTable("GuildSettings");
                });

            modelBuilder.Entity("MainBot.Database.Models.Logs.ErrorLog", b =>
                {
                    b.Property<int>("key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("errorTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("extraInformation")
                        .HasColumnType("longtext");

                    b.Property<string>("message")
                        .HasColumnType("longtext");

                    b.Property<string>("source")
                        .HasColumnType("longtext");

                    b.Property<string>("stackTrace")
                        .HasColumnType("longtext");

                    b.HasKey("key");

                    b.ToTable("Errors");
                });

            modelBuilder.Entity("MainBot.Database.Models.MuteUser", b =>
                {
                    b.Property<int>("key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ulong>("guildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("id")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime>("muteExpiryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<ulong>("muteRoleId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("key");

                    b.ToTable("MutedUsers");
                });

            modelBuilder.Entity("MainBot.Database.Models.Guild", b =>
                {
                    b.HasOne("MainBot.Database.Models.GuildSettings", "guildSettings")
                        .WithMany()
                        .HasForeignKey("guildSettingskey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("guildSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
